steps:
  # Build the Docker image for app1
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/quickstart-image', './app1']
    id: 'Build Docker Image for app1'

  # Push the Docker image for app1
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/quickstart-image']
    id: 'Push Docker Image for app1'

  # Build the Docker image for app2
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/flask-image', './app2']
    id: 'Build Docker Image for app2'

  # Push the Docker image for app2
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/flask-image']
    id: 'Push Docker Image for app2'

  # Apply deployment configurations and create a release using Google Cloud Deploy
  - name: 'google/cloud-sdk:latest'
    entrypoint: 'sh'
    args:
      - -xe
      - -c
      - |
        # Apply the deployment configurations
        gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1
        gcloud deploy apply --file deploy/dev.yaml --region=us-central1
        gcloud deploy apply --file deploy/prod.yaml --region=us-central1

        # Create releases for app1 and app2
        gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=gke-cicd-pipeline1 --region=us-central1 --skaffold-file=skaffold.yaml

options:
  logging: CLOUD_LOGGING_ONLY
